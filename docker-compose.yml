services:
  db:
    image: postgres:latest
    container_name: iotMan_postgres_container
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  iotman-backend:
    build:
      context: ./iotman
      dockerfile: Dockerfile
    container_name: iotman-backend
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "80:80"
    environment:
      - DB_HOST=db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./iotman:/app
    command: uvicorn main:app --host 0.0.0.0 --port 80 --reload --workers 1
  
  iotman-webui:
      build:
        context: ../IoTManWebUI/iotman-webui  # Path to your NiceGUI frontend repo
        dockerfile: Dockerfile
      container_name: iotman-webui
      restart: always
      ports:
        - "8080:8080"  # Exposing NiceGUI on 8080
      depends_on:
        - iotman-backend
      environment:
        - BACKEND_URL=http://iotman-backend:80  # Backend service name in Docker network
      volumes:
        - ../IoTManWebUI/iotman-webui:/app  # Mount source code for hot reloading
      command: python -m app.main


volumes:
  db-data:
